name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'version'
      - '.github/workflows/docker-build-push.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write  # Changed from 'read' to 'write' to allow tag creation
      repository-projects: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Get cfn-lint version
        id: get-version
        run: |
          # Read version from file, trim whitespace
          VERSION=$(cat version | tr -d '[:space:]')
          
          # Debug output
          echo "Raw version content from file:"
          hexdump -C version
          
          # Check if version is empty
          if [ -z "$VERSION" ]; then
            echo "Error: version file is empty or contains only whitespace"
            exit 1
          fi
          
          echo "Using version: $VERSION"
          echo "CFN_LINT_VERSION=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Tag branch
        if: github.event_name != 'pull_request'
        env:
          VERSION: v${{ steps.get-version.outputs.CFN_LINT_VERSION }}
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git tag -f -a ${VERSION} -m "Release ${VERSION} - cfn-lint version ${{ steps.get-version.outputs.CFN_LINT_VERSION }}"
          git push -f origin ${VERSION}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            CFN_LINT_VERSION=${{ steps.get-version.outputs.CFN_LINT_VERSION }}
          tags: |
            klahnen/cfn-lint:latest
            klahnen/cfn-lint:v${{ steps.get-version.outputs.CFN_LINT_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          # Add this for debugging
          ACTIONS_STEP_DEBUG: true
